// let lines = [
//     "..##.........##.........##.........##.........##.........##.......",
//     "#...#...#..#...#...#..#...#...#..#...#...#..#...#...#..#...#...#..",
//     ".#....#..#..#....#..#..#....#..#..#....#..#..#....#..#..#....#..#.",
//     "..#.#...#.#..#.#...#.#..#.#...#.#..#.#...#.#..#.#...#.#..#.#...#.#",
//     ".#...##..#..#...##..#..#...##..#..#...##..#..#...##..#..#...##..#.",
//     "..#.##.......#.##.......#.##.......#.##.......#.##.......#.##.....",
//     ".#.#.#....#.#.#.#....#.#.#.#....#.#.#.#....#.#.#.#....#.#.#.#....#",
//     ".#........#.#........#.#........#.#........#.#........#.#........#",
//     "#.##...#...#.##...#...#.##...#...#.##...#...#.##...#...#.##...#...",
//     "#...##....##...##....##...##....##...##....##...##....##...##....#",
//     ".#..#...#.#.#..#...#.#.#..#...#.#.#..#...#.#.#..#...#.#.#..#...#.#"
// ]

let lines = readLines(path: "3/input.txt")

let map = createMap(lines: lines)

func solve3A() {
    var result = 0
    for y in 0..<map.height {
        if (map.tree(3 * y, y)) {
            result += 1
        }
    }
    print("3.A:", result)
}

func solve3B() {
    var result = [Int]()
    let slopes = [(1, 1), (3, 1), (5, 1), (7, 1), (1, 2)]
    slopes.forEach({ slope in
        let (dx, dy) = slope
        var sum = 0
        var x = 0, y = 0
        while (y < map.height) {
            if (map.tree(x, y)) {
                sum += 1
            }
            x += dx
            y += dy
        }
        result.append(sum)
    })
    print("3.B:", result.reduce(1) {lhs, rhs in lhs * rhs})
}
